---
# File to config rasberry pis
# you need to copy your ssh keys to the pi in order for this to work
# ansible-playbook -i inventories/hosts -u pi config_pi.yml
- hosts: pis
  become: yes
  gather_facts: true


  pre_tasks:
    - name: Set Timezone to America/New_York
      timezone:
        name: America/New_York

    - name: Install system packages
      apt:
        name: "{{ item }}"
        state: present
        update_cache: yes
      loop:
        - wget
        - nano
        - curl
        - rsync
        - vim
        - git
        - zip
        - python3
        # system tests
        - sysbench
        - stress-ng


  # Some config borrowed from here:
  # Source: https://raspberrypi.stackexchange.com/questions/28907/how-could-one-automate-the-raspbian-raspi-config-setup
  tasks:
    #####################
    # raspi-config
    #####################

    # - name: Disable GUI and enable CLI auto-login
    #   become: yes
    #   command: raspi-config nonint do_boot_behaviour

    - name: Enable PI Camera
      become: yes
      command: raspi-config nonint do_camera 0

    # to control GPIO pins
    - name: Install RPI.GPIO
      become: yes
      command: pip3 install RPI.GPIO

    - name: copy .bash_profile to ~/
      copy:
        src: .bash_profile
        dest: /home/pi/

    #####################
    # files
    #####################
    - name: make the ~/src directory
      file:
        path: /home/pi/src
        state: directory
        mode: 0777

    - name: make the ~/src/files directory
      file:
        path: /home/pi/src/files
        state: directory
        mode: 0777

    - name: Set permissions on /src child items
      become: yes
      file:
        path: /home/pi/src
        recurse: yes
        owner: pi
        group: pi
        mode: '0770'
        recurse: yes

    #####################
    # server source config
    #####################
    # https://linuxconfig.org/how-to-create-systemd-service-unit-in-linux
    # https://www.raspberrypi.org/documentation/linux/usage/systemd.md
    # commands
    # sudo systemctl start myscript.service
    # sudo systemctl stop myscript.service
    - name: Copy vidstream.service file to /etc/systemd/system
      template:
        src: vidstream.service.j2
        dest: /etc/systemd/system/vidstream.service
        mode: '0770'

    # Used to allow autostart of service on pi
    # No you no longer have to run this command.
    # sudo systemctl enable myscript.service
    - name: Allow vidstream.service autostart by createing a symbolic link
      file:
        src: /etc/systemd/system/vidstream.service
        dest: /etc/systemd/system/multi-user.target.wants/vidstream.service
        owner: root
        group: root
        state: link


  post_tasks:
    - name: reboot PIs
      reboot:
